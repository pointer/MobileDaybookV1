<template>

<!--  <f7-popup id="duty-taking"> -->
      <f7-view navbar-fixed>
        <f7-pages>
          <f7-page id="duty-taking">
          <f7-navbar title="My App" back-link="Back">
  <f7-nav-right>
    <f7-link icon="icon-bars" panel-open="right"></f7-link>
  </f7-nav-right>
</f7-navbar>

            <f7-block>
                <div class="card">
                  <div class="card-header">{{site}}</div>
                  <div class="card-content">
                    <div class="list media-list">
                      <ul>
                        <li class="item-content">
                          <div class="item-inner">
                            <div class="item-title-row">
                              <div class="item-title">Usager: {{username}}</div>
                            </div>
                          </div>
                        </li>
                        <li class="item-content">
                          <div class="item-inner">
                            <div class="item-title-row">
                              <div class="item-title">Date: {{punchDate}}</div>
                            </div>
                          </div>
                        </li>
                        <li class="item-content">
                          <div class="item-inner">
                            <div class="item-title-row">
                              <div class="item-title">Latitude: {{lat}}</div>
                            </div>
                          </div>
                        </li>
                        <li class="item-content">
                          <div class="item-inner">
                            <div class="item-title-row">
                              <div class="item-title">Longitude: {{lng}}</div>
                            </div>
                          </div>
                        </li>                        
                      </ul>
                    </div>
                  </div>
                </div>
            </f7-block>
          </f7-page>
        </f7-pages>
      </f7-view>
<!--    </f7-popup> -->

</template>
<script>
 export default {
   data () {
     return {
       username: '',
       lat: '',
       lng: '',
       punchDate: '',
       site: ''
     }
   },
   mounted: function () {
     // this.punchIn()
   },
   methods: {
     onSend: function () {
       console.log(this.$device)
     },
     punchIn: function () {
       const self = this
      // const app = self.$f7
      // let coords = ''
       self.getCoordinates()
       .then(
          function onCoordinatesResolved (coords) {
            // let punchDate = new Date()
            // console.info('coordinates', coords)
            return coords
          },
          function onCoordinatesRejected (err) {
            console.warn('failed to obtain coordinates - ', err)
            return { lat: null, long: null }
          }
        )
       .then(function loadData (coords) {
         // console.info('coordinates', coords)
         self.showData(coords)
       })
       .catch(function (err) {
         console.error('error: ', err)
       })
     },
     getCoordinates: function () {
       return new Promise(function (resolve, reject) {
         if (
           !('geolocation' in navigator) ||
           !('getCurrentPosition' in navigator.geolocation)
         ) {
           return Promise.reject(new Error('geolocation API not available'))
         }
         let options = {
           timeout: 10000
         }
       // browser prompts for permission
         navigator.geolocation.getCurrentPosition(
          getPositionCallBack,
          reject,
          options
        )
         function getPositionCallBack (position) {
           var coords = ''
           try {
             coords = {
               lat: position.coords.latitude,
               lng: position.coords.longitude
             }
           } catch (err) {
             return reject(err)
           }
           return resolve(coords)
         }
       })
     },
     punchOut: function () {},
     showData: function (coords) {
       // console.info('coordinates', coords)
       const self = this
       self.punchDate = new Date()
       // console.log(self.punchDate)
       self.lat = coords.lat
       self.lng = coords.lng
       // let punchDate = moment(new Date(), 'YYYY-MM-DD')
       /* for (let todo in this.todos) {
        if (this.todos.hasOwnProperty(todo)) {
          // console.log(todos0[todo].site)
          let startDate = moment(this.todos[todo].start_date, 'YYYY-MM-DD')
          if (startDate.diff(punchDate, 'days') !== 0) {
            this.site = this.todos[todo].site
          }
        }
      } */
       self.username = window.localStorage.getItem('username')
     }
   }
 }
</script>
